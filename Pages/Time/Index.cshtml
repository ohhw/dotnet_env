@page
@model MyConsoleApp.Pages.Time.IndexModel
@{
    ViewData["Title"] = "시간 정보";
}

@if (Model.Format == "json")
{
    <div style="font-family: monospace; background: #f8f9fa; padding: 20px; border-radius: 10px; margin: 20px auto; max-width: 600px;">
        <pre style="margin: 0; font-size: 14px;">@Model.JsonResponse</pre>
    </div>
    
    <div style="text-align: center; margin-top: 20px;">
        <a href="/Time" style="background:#007bff; color:#fff; padding:10px 20px; text-decoration:none; border-radius:5px; font-size:14px;">🕐 일반 시간 페이지로</a>
        <a href="/" style="background:#6c757d; color:#fff; padding:10px 20px; text-decoration:none; border-radius:5px; font-size:14px; margin-left:10px;">🏠 홈으로 돌아가기</a>
    </div>
}
else
{
    <div style="max-width: 800px; margin: 0 auto; text-align: center;">
        <h1>🕐 현재 시간 정보</h1>
        
        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 40px; border-radius: 15px; margin: 30px 0; box-shadow: 0 8px 32px rgba(0,0,0,0.1);">
            <h2 id="current-time" style="font-size: 2.5em; margin-bottom: 10px;">@DateTime.Now.ToString("HH:mm:ss")</h2>
            <p id="current-date" style="font-size: 1.3em; margin-bottom: 5px;">@DateTime.Now.ToString("yyyy년 MM월 dd일")</p>
            <p id="current-day" style="font-size: 1.1em; opacity: 0.9;">@DateTime.Now.ToString("dddd", new System.Globalization.CultureInfo("ko-KR"))</p>
        </div>
        
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 30px 0;">
            <div style="background: #e3f2fd; padding: 20px; border-radius: 10px; border-left: 5px solid #2196f3;">
                <h3 style="color: #1976d2; margin-bottom: 10px;">📅 날짜 정보</h3>
                <p><strong>전체 날짜:</strong> <span id="full-date">@DateTime.Now.ToString("yyyy-MM-dd")</span></p>
                <p><strong>요일:</strong> <span id="day-of-week">@DateTime.Now.ToString("dddd", new System.Globalization.CultureInfo("ko-KR"))</span></p>
                <p><strong>년도:</strong> <span id="year">@(DateTime.Now.Year)</span>년</p>
                <p><strong>월:</strong> <span id="month">@(DateTime.Now.Month)</span>월</p>
                <p><strong>일:</strong> <span id="day">@(DateTime.Now.Day)</span>일</p>
            </div>
            
            <div style="background: #f3e5f5; padding: 20px; border-radius: 10px; border-left: 5px solid #9c27b0;">
                <h3 style="color: #7b1fa2; margin-bottom: 10px;">⏰ 시간 정보</h3>
                <p><strong>전체 시간:</strong> <span id="full-time">@DateTime.Now.ToString("HH:mm:ss")</span></p>
                <p><strong>시:</strong> <span id="hour">@(DateTime.Now.Hour)</span>시</p>
                <p><strong>분:</strong> <span id="minute">@(DateTime.Now.Minute)</span>분</p>
                <p><strong>초:</strong> <span id="second">@(DateTime.Now.Second)</span>초</p>
                <p><strong>밀리초:</strong> <span id="millisecond">@DateTime.Now.Millisecond</span></p>
            </div>
            
            <div style="background: #e8f5e8; padding: 20px; border-radius: 10px; border-left: 5px solid #4caf50;">
                <h3 style="color: #388e3c; margin-bottom: 10px;">🌍 추가 정보</h3>
                <p><strong>UTC 시간:</strong> <span id="utc-time">@DateTime.UtcNow.ToString("HH:mm:ss")</span></p>
                <p><strong>시간대:</strong> <span id="timezone-info">감지 중...</span></p>
                <p><strong>유닉스 타임스탬프:</strong> <span id="unix-timestamp">@((DateTimeOffset)DateTime.Now).ToUnixTimeSeconds()</span></p>
                <p><strong>ISO 8601:</strong> <span id="iso-8601">@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssK")</span></p>
            </div>
        </div>
        
        <div style="margin: 30px 0;">
            <div style="background: #f8f9fa; padding: 20px; border-radius: 10px; margin-bottom: 20px;">
                <h3 style="color: #495057; margin-bottom: 15px;">🕐 시간대 설정</h3>
                <div style="display: flex; align-items: center; gap: 15px; flex-wrap: wrap;">
                    <label for="timezone-selector" style="font-weight: bold;">시간대 선택:</label>
                    <select id="timezone-selector" style="padding: 8px 12px; border: 2px solid #dee2e6; border-radius: 5px; font-size: 14px; min-width: 200px;">
                        <option value="auto">자동 감지</option>
                        <option value="Asia/Seoul">한국 (Seoul)</option>
                        <option value="Asia/Tokyo">일본 (Tokyo)</option>
                        <option value="Asia/Shanghai">중국 (Shanghai)</option>
                        <option value="America/New_York">미국 동부 (New York)</option>
                        <option value="America/Los_Angeles">미국 서부 (Los Angeles)</option>
                        <option value="America/Chicago">미국 중부 (Chicago)</option>
                        <option value="Europe/London">영국 (London)</option>
                        <option value="Europe/Paris">프랑스 (Paris)</option>
                        <option value="Europe/Berlin">독일 (Berlin)</option>
                        <option value="Australia/Sydney">호주 (Sydney)</option>
                        <option value="UTC">UTC</option>
                    </select>
                    <button onclick="resetToAuto()" style="background: #28a745; color: white; padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer;">
                        🌍 자동 감지로 리셋
                    </button>
                </div>
            </div>
            
            <button onclick="location.reload()" style="background: #ff9800; color: white; padding: 12px 25px; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin: 5px;">
                🔄 시간 새로고침
            </button>
            <a href="/Time?format=json" style="background: #607d8b; color: white; padding: 12px 25px; text-decoration: none; border-radius: 5px; font-size: 16px; margin: 5px;">
                📊 JSON 형식으로 보기
            </a>
        </div>
        
        <div style="text-align: center; margin-top: 30px;">
            <a href="/" style="background:#6c757d; color:#fff; padding:10px 20px; text-decoration:none; border-radius:5px; font-size:14px;">🏠 홈으로 돌아가기</a>
        </div>
    </div>
    
    <script>
        // 사용자의 로케일과 시간대 자동 감지
        const userLocale = navigator.language || 'ko-KR';
        let currentTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        
        // 페이지 로드 시 시간대 선택기 초기화
        function initializeTimezoneSelector() {
            const selector = document.getElementById('timezone-selector');
            
            // 자동 감지된 시간대가 목록에 있으면 선택
            for (let option of selector.options) {
                if (option.value === currentTimezone) {
                    option.selected = true;
                    break;
                }
            }
            
            // 시간대 변경 이벤트 리스너
            selector.addEventListener('change', function() {
                if (this.value === 'auto') {
                    currentTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
                } else {
                    currentTimezone = this.value;
                }
                updateTime(); // 즉시 시간 업데이트
            });
        }
        
        // 자동 감지로 리셋 함수
        function resetToAuto() {
            currentTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
            document.getElementById('timezone-selector').value = 'auto';
            updateTime();
        }
        
        function updateTime() {
            const now = new Date();
            const utcNow = new Date(now.getTime() + (now.getTimezoneOffset() * 60000));
            
            // 시간 포맷팅 함수
            function pad(num) {
                return num.toString().padStart(2, '0');
            }
            
            // 선택된 시간대 기준으로 포맷팅
            const timeString = now.toLocaleTimeString(userLocale, { 
                hour12: false, 
                hour: '2-digit', 
                minute: '2-digit', 
                second: '2-digit',
                timeZone: currentTimezone
            });
            
            const dateString = now.toLocaleDateString(userLocale, {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                timeZone: currentTimezone
            });
            
            const dayString = now.toLocaleDateString(userLocale, {
                weekday: 'long',
                timeZone: currentTimezone
            });
            
            // 메인 시간 표시 업데이트
            document.getElementById('current-time').textContent = timeString;
            document.getElementById('current-date').textContent = dateString;
            document.getElementById('current-day').textContent = dayString;
            
            // 개별 날짜/시간 값들을 선택된 시간대로 계산
            const localDate = new Date(now.toLocaleString('en-US', { timeZone: currentTimezone }));
            
            // 날짜 정보 업데이트
            const fullDateString = localDate.getFullYear() + '-' + 
                                 pad(localDate.getMonth() + 1) + '-' + 
                                 pad(localDate.getDate());
            document.getElementById('full-date').textContent = fullDateString;
            document.getElementById('day-of-week').textContent = dayString;
            document.getElementById('year').textContent = localDate.getFullYear();
            document.getElementById('month').textContent = localDate.getMonth() + 1;
            document.getElementById('day').textContent = localDate.getDate();
            
            // 시간 정보 업데이트
            document.getElementById('full-time').textContent = timeString;
            document.getElementById('hour').textContent = localDate.getHours();
            document.getElementById('minute').textContent = localDate.getMinutes();
            document.getElementById('second').textContent = localDate.getSeconds();
            document.getElementById('millisecond').textContent = localDate.getMilliseconds();
            
            // UTC 시간 업데이트
            const utcTimeString = `${pad(utcNow.getHours())}:${pad(utcNow.getMinutes())}:${pad(utcNow.getSeconds())}`;
            document.getElementById('utc-time').textContent = utcTimeString;
            document.getElementById('unix-timestamp').textContent = Math.floor(now.getTime() / 1000);
            
            // ISO 8601 형식 업데이트 (선택된 시간대 포함)
            const tempDate = new Date(now.toLocaleString('en-US', { timeZone: currentTimezone }));
            const offset = getTimezoneOffset(tempDate, currentTimezone);
            const isoString = `${tempDate.getFullYear()}-${pad(tempDate.getMonth() + 1)}-${pad(tempDate.getDate())}T${pad(tempDate.getHours())}:${pad(tempDate.getMinutes())}:${pad(tempDate.getSeconds())}${offset}`;
            document.getElementById('iso-8601').textContent = isoString;
            
            // 시간대 정보 업데이트
            updateTimezoneDisplay();
        }
        
        // 시간대 오프셋 계산 (특정 시간대용)
        function getTimezoneOffset(date, timezone) {
            const utcTime = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));
            const localTime = new Date(date.toLocaleString('en-US', { timeZone: timezone }));
            const offset = (localTime.getTime() - utcTime.getTime()) / (1000 * 60);
            
            const hours = Math.floor(Math.abs(offset) / 60);
            const minutes = Math.abs(offset) % 60;
            const sign = offset >= 0 ? '+' : '-';
            return sign + pad(hours) + ':' + pad(minutes);
        }
        
        // 시간대 정보 표시 업데이트
        function updateTimezoneDisplay() {
            const timezoneElement = document.getElementById('timezone-info');
            if (timezoneElement) {
                const now = new Date();
                const tempDate = new Date(now.toLocaleString('en-US', { timeZone: currentTimezone }));
                const offset = getTimezoneOffset(tempDate, currentTimezone);
                
                // 시간대 이름을 더 친근하게 표시
                let displayName = currentTimezone;
                if (currentTimezone === 'Asia/Seoul') displayName = '한국 표준시 (KST)';
                else if (currentTimezone === 'Asia/Tokyo') displayName = '일본 표준시 (JST)';
                else if (currentTimezone === 'America/New_York') displayName = '미국 동부시간 (EST/EDT)';
                else if (currentTimezone === 'America/Los_Angeles') displayName = '미국 서부시간 (PST/PDT)';
                else if (currentTimezone === 'Europe/London') displayName = '영국시간 (GMT/BST)';
                else if (currentTimezone === 'UTC') displayName = '협정 세계시 (UTC)';
                
                timezoneElement.textContent = `${displayName} (UTC${offset})`;
            }
        }
        
        // 페이지 로드 시 초기화
        document.addEventListener('DOMContentLoaded', function() {
            initializeTimezoneSelector();
            updateTime();
            
            // 1초마다 시간 업데이트
            setInterval(updateTime, 1000);
        });
        
        // 페이지 로드 시 즉시 실행 (DOMContentLoaded 이벤트가 발생하지 않은 경우를 위해)
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', function() {
                initializeTimezoneSelector();
                updateTime();
            });
        } else {
            initializeTimezoneSelector();
            updateTime();
        }
        
        // 1초마다 시간 업데이트
        setInterval(updateTime, 1000);
    </script>
}
